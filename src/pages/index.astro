---
import Layout from '../layouts/Layout.astro'
---

<Layout title="TextoVoz">
	<main class="container m-auto grid min-h-screen grid-rows-[auto,1fr,auto] px-4 min-w-[320px]">
		<header class="text-2xl font-bold leading-[4rem] max-sm:text-xl dark:text-white">
			TextoVoz
		</header>
		<section class="flex flex-col gap-6">
			<article class="flex gap-6 flex-wrap max-sm:justify-center">
				<div class="grid gap-2 w-full max-w-[125px] sm:max-w-[150px] dark:text-white">
					<label>Idioma</label>
					<select id="idioma" class="w-full p-2 border rounded-lg cursor-pointer outline-none hover:border-[#625195] dark:bg-gray-900 border-gray-900 dark:border-white dark:hover:border-[#CC8EA5]">
						<option>Sin resultados</option>
					</select>
				</div>
				<div class="grid gap-2 w-full max-w-[125px] sm:max-w-[250px] dark:text-white">
					<label>Voz</label>
					<select id="voz" class="w-full p-2 border rounded-lg cursor-pointer outline-none hover:border-[#625195] dark:bg-gray-900 border-gray-900 dark:border-white dark:hover:border-[#CC8EA5]">
						<option>Sin resultados</option>
					</select>
				</div>
				<div class="grid gap-2 w-full max-w-[125px] sm:max-w-[150px] dark:text-white">
					<label>Tono</label>
					<input type="range" id="tono" min="0" max="10" value="5" class="w-full my-2 cursor-pointer accent-[#625195] dark:accent-[#CC8EA5]">
				</div>
				<div class="grid gap-2 w-full max-w-[125px] sm:max-w-[150px] dark:text-white">
					<label>Velocidad</label>
					<input type="range" id="velocidad" min="0" max="10" value="5" class="w-full my-2 cursor-pointer accent-[#625195] dark:accent-[#CC8EA5]">
				</div>
				<div class="grid gap-2 w-full max-w-[125px] sm:max-w-[150px] dark:text-white">
					<label>Volumen</label>
					<input id="volumen" type="range" min="0" max="10" value="10" class="w-full my-2 cursor-pointer accent-[#625195] dark:accent-[#CC8EA5]">
				</div>
			</article>

			<fieldset class="border p-2 h-full rounded-lg border-gray-900 dark:border-white dark:text-white">
				<legend>
					<div class="flex gap-2 justify-center">
						<button id="play" type="button" title="reproducir" class="border rounded-lg p-2 text-green-600 group hover:bg-[#62519533] border-gray-900 dark:border-white">
							<svg class="group-active:scale-90"  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="currentColor"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M6 4v16a1 1 0 0 0 1.524 .852l13 -8a1 1 0 0 0 0 -1.704l-13 -8a1 1 0 0 0 -1.524 .852z" /></svg>
						</button>
						<button id="stop" type="button" title="parar" class="border rounded-lg p-2 text-gray-600 group hover:bg-[#62519533] border-gray-900 dark:border-white">
							<svg class="group-active:scale-90"  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="currentColor"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M17 4h-10a3 3 0 0 0 -3 3v10a3 3 0 0 0 3 3h10a3 3 0 0 0 3 -3v-10a3 3 0 0 0 -3 -3z" /></svg>
						</button>
						<button id="record" type="button" title="grabar" class="border rounded-lg p-2 text-red-600 group hover:bg-[#62519533] relative border-gray-900 dark:border-white">
							<span id="icon-record-anim" class="absolute hidden animate-ping z-[-1] size-4 left-0 right-0 top-0 bottom-0 m-auto rounded-full bg-red-500 opacity-75"></span>
							<svg class="group-active:scale-90"  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="currentColor"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M8 5.072a8 8 0 1 1 -3.995 7.213l-.005 -.285l.005 -.285a8 8 0 0 1 3.995 -6.643z" /></svg>							
						</button>
					</div>
				</legend>
				<textarea id="text" placeholder="Aqui tu mensaje de texto" class="p-1 h-full w-full min-h-64 outline-none bg-transparent dark:text-gray-100"/>
			</fieldset>
		</section>
		<footer class="text-center leading-[3rem] opacity-70 text-sm dark:text-white">
			Creado por üë®‚Äçüíª@joarieldev
		</footer>
		<button onclick="changeTheme()" class="fixed bottom-3 right-3 p-1 group transition">
			<svg id="sun" class="size-6 sm:size-8 text-yellow-500 group-hover:scale-110 group-active:scale-100"  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="currentColor"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 19a1 1 0 0 1 .993 .883l.007 .117v1a1 1 0 0 1 -1.993 .117l-.007 -.117v-1a1 1 0 0 1 1 -1z" /><path d="M18.313 16.91l.094 .083l.7 .7a1 1 0 0 1 -1.32 1.497l-.094 -.083l-.7 -.7a1 1 0 0 1 1.218 -1.567l.102 .07z" /><path d="M7.007 16.993a1 1 0 0 1 .083 1.32l-.083 .094l-.7 .7a1 1 0 0 1 -1.497 -1.32l.083 -.094l.7 -.7a1 1 0 0 1 1.414 0z" /><path d="M4 11a1 1 0 0 1 .117 1.993l-.117 .007h-1a1 1 0 0 1 -.117 -1.993l.117 -.007h1z" /><path d="M21 11a1 1 0 0 1 .117 1.993l-.117 .007h-1a1 1 0 0 1 -.117 -1.993l.117 -.007h1z" /><path d="M6.213 4.81l.094 .083l.7 .7a1 1 0 0 1 -1.32 1.497l-.094 -.083l-.7 -.7a1 1 0 0 1 1.217 -1.567l.102 .07z" /><path d="M19.107 4.893a1 1 0 0 1 .083 1.32l-.083 .094l-.7 .7a1 1 0 0 1 -1.497 -1.32l.083 -.094l.7 -.7a1 1 0 0 1 1.414 0z" /><path d="M12 2a1 1 0 0 1 .993 .883l.007 .117v1a1 1 0 0 1 -1.993 .117l-.007 -.117v-1a1 1 0 0 1 1 -1z" /><path d="M12 7a5 5 0 1 1 -4.995 5.217l-.005 -.217l.005 -.217a5 5 0 0 1 4.995 -4.783z" /></svg>
			<svg id="moon" class="size-6 sm:size-8 text-gray-200 group-hover:scale-110 group-active:scale-100"  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="currentColor"  ><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 1.992a10 10 0 1 0 9.236 13.838c.341 -.82 -.476 -1.644 -1.298 -1.31a6.5 6.5 0 0 1 -6.864 -10.787l.077 -.08c.551 -.63 .113 -1.653 -.758 -1.653h-.266l-.068 -.006l-.06 -.002z" /></svg>
		</button>
	</main>
</Layout>

<script is:inline>
	const idiomaSelect = document.getElementById("idioma")
	const vozSelect = document.getElementById("voz")
	const playButton = document.getElementById("play")
	const stopButton = document.getElementById("stop")
	const recordButton = document.getElementById("record")
	const tonoInput = document.getElementById("tono")
	const velocidadInput = document.getElementById("velocidad")
	const volumenInput = document.getElementById("volumen")
	const textTextArea = document.getElementById("text")
	const iconRecordAnim = document.getElementById("icon-record-anim")

	const synth = speechSynthesis
	const message = new SpeechSynthesisUtterance()
	const recognition = new webkitSpeechRecognition()
	recognition.continuous = true
	recognition.lang = 'es-AR'

	let recordController = new AbortController()
	let idiomaFilter = []
	let isRecording = false
	
	const loadVoices=()=>{
		updateTheme(getTheme())
		const mySet = new Set()
		synth.getVoices().forEach(voice => {
			mySet.add(voice.lang)
		})
		const options = Array.from(mySet).map(item => {
			return `<option value="${item}">${item}</option>`
		})
		options.unshift('<option>Seleccione</option>');
		idiomaSelect.innerHTML = options
	}

	idiomaSelect.addEventListener("change", () => {
		const value = idiomaSelect.value
		idiomaFilter = synth.getVoices().filter(item=>item.lang === value)
		const options = idiomaFilter.map((voice) => {
			return `<option value="${voice.name}">${voice.name}</option>`
		})
		vozSelect.innerHTML = idiomaFilter.length !== 0 ? options : '<option>Sin resultados</option>'
	})

	vozSelect.addEventListener("change", () => {
		const value = vozSelect.value
		voiceFind = idiomaFilter.find(item => item.name === value)
	})

	playButton.addEventListener("click", () => {
		const value = vozSelect.value
		const voiceFind = idiomaFilter.find(item => item.name === value)
		if (text !== '' && voiceFind) {
			message.text = textTextArea.value
			message.voice = voiceFind
			message.pitch = tonoInput.value/5
			message.rate = velocidadInput.value/5
			message.volume = volumenInput.value/10
			synth.speak(message)
		}
	})

	stopButton.addEventListener("click", () => {
		if(isRecording) {
			endRecording()
			iconRecordAnim.classList.add("hidden")
		}
		synth.cancel()
	})

	recordButton.addEventListener("click", () => {
		if(!isRecording){
			iconRecordAnim.classList.remove("hidden")
			startRecording()
		}
	})

	//Manejo del scroll para input-range
	const scrollInputRange = (e, input) => {
		if (e.deltaY < 0) {
				input.value = Math.min(parseInt(input.value) + 1, input.max)
		} else {
				input.value = Math.max(parseInt(input.value) - 1, input.min)
		}
	}
	tonoInput.addEventListener("wheel", (e) => {
		e.preventDefault()
		scrollInputRange(e, tonoInput)		
	})
	velocidadInput.addEventListener("wheel", (e) => {
		e.preventDefault()
		scrollInputRange(e, velocidadInput)
	})
	volumenInput.addEventListener("wheel", (e) => {
		e.preventDefault()
		scrollInputRange(e, volumenInput)
	})

	const startRecording = () => {
		isRecording = true
		recognition.start()
		recognition.addEventListener('result', (event) => {
			const transcript = Array.from(event.results)
				.map((result) => result[0])
				.map((result) => result.transcript)
				.join(' ')
			textTextArea.value = transcript
		},{
      signal: recordController.signal
    })
	}

	const endRecording = () => {
		isRecording=false
		recognition.stop()
		recordController.abort()
    recordController = new AbortController()
	}

	const changeTheme = () => {
    const theme = getTheme()
    if (theme === 'dark') updateTheme('light')
    if (theme === 'light') updateTheme('dark') 
  }
  const getTheme = () => {
    const themeStorage = localStorage.getItem('theme')
    if ( themeStorage !== 'undefined' && themeStorage !== null ) {
      return localStorage.getItem('theme')
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'light'
  }
  const updateTheme = (theme) => {
    localStorage.setItem('theme', theme)
    if(theme === 'dark') {
      document.documentElement.classList.add('dark')
      document.getElementById('sun').classList.add('hidden')
      document.getElementById('moon').classList.remove('hidden')
    }
    if(theme === 'light') { 
      document.documentElement.classList.remove('dark')
      document.getElementById('moon').classList.add('hidden')
      document.getElementById('sun').classList.remove('hidden')
    }
  }

	document.body.onload = loadVoices

</script>
